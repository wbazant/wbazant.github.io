<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://127.0.0.1:53600/tag/programming</id>
    <title>Wojtek</title>
    <updated>2019-09-21T21:32:35Z</updated>
    <link rel="self" href="http://127.0.0.1:53600/tag/programming/1.html"/>
    <link rel="alternate" href="http://127.0.0.1:53600/tag/programming"/>
    <generator version="2.000">Statocles</generator>

    <entry>
        <id>http://127.0.0.1:53600/posts/good-uses-of-frowned-upon-language-features</id>
        <title>Good uses of frowned-upon language features</title>
        <link rel="alternate" href="http://127.0.0.1:53600/posts/good-uses-of-frowned-upon-language-features" />
        <content type="html"><![CDATA[
            <p>Not every language feature is respected these days. I speculate why it might be, and demonstrate a few mind-expanding programming techniques.</p>
            <p><a href="http://127.0.0.1:53600/posts/good-uses-of-frowned-upon-language-features#section-2">Continue reading...</a></p>
        ]]></content>
        <updated>2019-05-19T00:00:00Z</updated>
    </entry>
    <entry>
        <id>http://127.0.0.1:53600/posts/how-to-call-r-from-perl-on-inter-process-communication</id>
        <title>How to call R from Perl: on inter-process communication</title>
        <link rel="alternate" href="http://127.0.0.1:53600/posts/how-to-call-r-from-perl-on-inter-process-communication" />
        <content type="html"><![CDATA[
            <p>I'm glad the title caught your attention. Why call R from Perl - or have code in language X call code for language Y, for any X and Y, for that matter? Sometimes it's just hard to choose among languages you're fluent in, especially if you're a bit of a polyglot and don't have a clear favourite. Perhaps you value diversity, just like modern companies value diversity in their workforce: different programming languages, just like employees with different backgrounds, offer distinct advantages and strengths that can be drawn from when creating a product.</p>

<p>I happen to have a language I strongly favour, and I consider my programs are already diverse enough, even though they all got written by a single white male. I also managed to have a job in bioinformatics without installing R for quite a while. I am not riding that streak any more because a specific thing I needed to do only exists as an R package, so I learned how to use R from Perl. This merits celebration with a blog post, so I'm gonna tell you how to call R from Perl and also more generally about IPC.</p>
            <p><a href="http://127.0.0.1:53600/posts/how-to-call-r-from-perl-on-inter-process-communication#section-2">Continue reading...</a></p>
        ]]></content>
        <updated>2018-12-09T00:00:00Z</updated>
    </entry>
    <entry>
        <id>http://127.0.0.1:53600/posts/instructions-for-your-program-from-an-online-spreadsheet</id>
        <title>Instructions for your program from an online spreadsheet</title>
        <link rel="alternate" href="http://127.0.0.1:53600/posts/instructions-for-your-program-from-an-online-spreadsheet" />
        <content type="html"><![CDATA[
            <p>Suppose you're a programmer contracting for a client who pays you to do analyses on a bunch of data. They give you a slightly different spreadsheet every week, and you're so lazy that you've scripted everything up. The only thing you need to do is take that spreadsheet, save it on disk or whatever, and press "run".</p>

<p>Here's an idea for a workflow that goes one step further, using GitHub's online editing. Of course GitHub's competition offers this too, and I dislike this Microsoft owned company as much as is currently in fashion.</p>
            <p><a href="http://127.0.0.1:53600/posts/instructions-for-your-program-from-an-online-spreadsheet#section-2">Continue reading...</a></p>
        ]]></content>
        <updated>2018-11-08T00:00:00Z</updated>
    </entry>
    <entry>
        <id>http://127.0.0.1:53600/posts/how-to-use-fewer-variables</id>
        <title>How to use fewer variables</title>
        <link rel="alternate" href="http://127.0.0.1:53600/posts/how-to-use-fewer-variables" />
        <content type="html"><![CDATA[
            <p>Using variables may benefit program readability, but many programmers regard it as a bit of a weak move (<a href="https://www.yegor256.com/2015/09/01/redundant-variables-are-evil.html">source: Yegor Bugayenko- programmer, blogger, and entrepreneur</a>). Giving stuff names is emphasised in beginner tutorials, and I expect many of my programming readers use variables a little bit too much, perhaps not realising it is merely a programming technique. I will explain the drawbacks of this technique, and give some alternatives, so that by eschewing it you might improve your craft further.</p>
            <p><a href="http://127.0.0.1:53600/posts/how-to-use-fewer-variables#section-2">Continue reading...</a></p>
        ]]></content>
        <updated>2018-09-26T00:00:00Z</updated>
    </entry>
    <entry>
        <id>http://127.0.0.1:53600/posts/marx-on-agile</id>
        <title>Marx on Agile</title>
        <link rel="alternate" href="http://127.0.0.1:53600/posts/marx-on-agile" />
        <content type="html"><![CDATA[
            <p><a href="https://en.wikipedia.org/wiki/Agile_software_development">Agile</a> is a modern way to organise software development. <a href="https://en.wikipedia.org/wiki/Karl_Marx">Karl Marx (1818-1883)</a> was a philosopher, economist, historian, political theorist, sociologist, journalist and revolutionary socialist. His ideas, and revolutionary socialism he kickstarted, have caused quite a stir in the XX century, and it's still not certain whether they were good or not, because they were never properly implemented and truly tried. I'm not going to try convince you to agree with Marx, dear reader, or say that I do. We're going to merely examine some of his ideas, and see how they apply to the modern tech world.</p>
            <p><a href="http://127.0.0.1:53600/posts/marx-on-agile#section-2">Continue reading...</a></p>
        ]]></content>
        <updated>2018-09-08T00:00:00Z</updated>
    </entry>
    <entry>
        <id>http://127.0.0.1:53600/posts/customise-your-internet</id>
        <title>Customise your Internet</title>
        <link rel="alternate" href="http://127.0.0.1:53600/posts/customise-your-internet" />
        <content type="html"><![CDATA[
            <p>It's quite hard to have your own piece of internet these days. Blogging isn't easy, even if you don't have many readers. Sites ran by companies don't let you have your own piece, and they're made less usable by attempts to track the movement of your eyeballs and the like. My reader, I know you are yearning for something different. This post will teach you how to make bits of the modern Internet into what you may want them to be.</p>
            <p><a href="http://127.0.0.1:53600/posts/customise-your-internet#section-2">Continue reading...</a></p>
        ]]></content>
        <updated>2018-08-08T00:00:00Z</updated>
    </entry>
    <entry>
        <id>http://127.0.0.1:53600/posts/upgrade-from-object-oriented-to-functional-programming-with-this-weird-trick</id>
        <title>Upgrade from object-oriented to functional programming with this weird trick</title>
        <link rel="alternate" href="http://127.0.0.1:53600/posts/upgrade-from-object-oriented-to-functional-programming-with-this-weird-trick" />
        <content type="html"><![CDATA[
            <p>Picasso was a great man, but fond of exaggeration, so I always take it with a pinch of salt when people say it took him a lifetime to learn to draw like a child. As you might have guessed already, this post will be about me, and how I write Perl, and tracing the influence of my early periods of being sold on Haskell at university, training myself to appear worthy at interviews, and subsequently becomming a maintenance Java programmer.</p>
            <p><a href="http://127.0.0.1:53600/posts/upgrade-from-object-oriented-to-functional-programming-with-this-weird-trick#section-2">Continue reading...</a></p>
        ]]></content>
        <updated>2018-07-10T00:00:00Z</updated>
    </entry>
    <entry>
        <id>http://127.0.0.1:53600/posts/between-bash-and-text-editor</id>
        <title>Between bash and text editor</title>
        <link rel="alternate" href="http://127.0.0.1:53600/posts/between-bash-and-text-editor" />
        <content type="html"><![CDATA[
            <p>When you have a long command you need to type correctly, and you only have left, right and backspace to navigate, it can soon feel tiresome. I wouldn't want you to tell all your friends you gave command line a go but it was like some caveman alternative to Microsoft Office products. When typing a command you can move it to a text editor with "hold-ctrl-press-x-then-e", and that's what the post is about.</p>
            <p><a href="http://127.0.0.1:53600/posts/between-bash-and-text-editor#section-2">Continue reading...</a></p>
        ]]></content>
        <updated>2018-05-26T00:00:00Z</updated>
    </entry>
    <entry>
        <id>http://127.0.0.1:53600/posts/extra-functionality-for-command-line-programs</id>
        <title>Extra functionality through pipes</title>
        <link rel="alternate" href="http://127.0.0.1:53600/posts/extra-functionality-for-command-line-programs" />
        <content type="html"><![CDATA[
            <p>Sometimes the programs you are running aren't as fully featured as you need them to be. If it's your program, extend it to do work like you want it, the ad-hoc extensions will make it soon feel like a warm worn-in shoe. If it's not your program, and the missing feature is correctness, just fix your copy, and submit the fix to the author. Otherwise add the extra functionality outside, with an appropriate contraption. Here's a couple from me, based around pipes. </p>
            <p><a href="http://127.0.0.1:53600/posts/extra-functionality-for-command-line-programs#section-2">Continue reading...</a></p>
        ]]></content>
        <updated>2018-05-19T00:00:00Z</updated>
    </entry>
    <entry>
        <id>http://127.0.0.1:53600/posts/how-to-parse-xml-with-regular-expressions</id>
        <title>How to parse XML with regular expressions</title>
        <link rel="alternate" href="http://127.0.0.1:53600/posts/how-to-parse-xml-with-regular-expressions" />
        <content type="html"><![CDATA[
            <p>There is a belief, especially popular under university graduates with heads full of Noam Chomsky, <a href="https://en.wikipedia.org/wiki/Chomsky_hierarchy">in the inherent hierarchy of grammars</a>, and there are people out there who think it's something that has to be followed. <a href="https://stackoverflow.com/a/1732454">Obey the hierarchy, they tell you</a>. I suggest you hear them out, learn what is there to be learned, and then reply, I didn't know there were any rules about this. Dear reader, you are my fellow human and I want you to be strong and empowered. I'm gonna show you how to parse XML with regular expressions, and then you can make your own choices.</p>
            <p><a href="http://127.0.0.1:53600/posts/how-to-parse-xml-with-regular-expressions#section-2">Continue reading...</a></p>
        ]]></content>
        <updated>2018-04-26T00:00:00Z</updated>
    </entry>
</feed>
